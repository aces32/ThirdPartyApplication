{"version":3,"sources":["./src/Utilities/material-ui.module.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/Utilities/FormValidation.ts","./src/app/app.module.ts","./src/app/landing-page/landing-page.service.ts","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/Utilities/encrption.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\n\r\nconst material = [\r\nMatAutocompleteModule,\r\nMatBadgeModule,\r\nMatBottomSheetModule,\r\nMatButtonModule,\r\nMatButtonToggleModule,\r\nMatCardModule,\r\nMatCheckboxModule,\r\nMatChipsModule,\r\nMatDatepickerModule,\r\nMatDialogModule,\r\nMatDividerModule,\r\nMatExpansionModule,\r\nMatGridListModule,\r\nMatIconModule,\r\nMatInputModule,\r\nMatListModule,\r\nMatMenuModule,\r\nMatNativeDateModule,\r\nMatPaginatorModule,\r\nMatProgressBarModule,\r\nMatProgressSpinnerModule,\r\nMatRadioModule,\r\nMatRippleModule,\r\nMatSelectModule,\r\nMatSidenavModule,\r\nMatSliderModule,\r\nMatSlideToggleModule,\r\nMatSnackBarModule,\r\nMatSortModule,\r\nMatStepperModule,\r\nMatTableModule,\r\nMatTabsModule,\r\nMatToolbarModule,\r\nMatTooltipModule,\r\nMatTreeModule,\r\nMatTooltipModule,\r\nMatFormFieldModule,\r\nA11yModule,\r\nDragDropModule,\r\nPortalModule,\r\nScrollingModule,\r\nCdkStepperModule,\r\nCdkTableModule,\r\nCdkTreeModule,\r\nDragDropModule,\r\n];\r\n\r\n@NgModule({\r\nimports: material,\r\nexports: material\r\n})\r\nexport class MaterialUiModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  enviromentURL: \"https://sharpgasapi.somee.com/\",\n  ThirdPartyBookingpoint: \"api/ThirdPartyBooking\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ThirdPartyBookingApplication';\n}\n","<app-landing-page></app-landing-page>","import { FormGroup, FormControl } from '@angular/forms';\r\n\r\nexport class FormValidators {\r\n  public static validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialUiModule } from 'src/Utilities/material-ui.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialUiModule,\n    ToastrModule.forRoot(\n      {  positionClass: 'toast-bottom-right'}\n    ),\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LandingPageService {\n\n  constructor(private http:  HttpClient) { }\n\n  \n  getData(): Observable<any>{\n    return this.http.get(\"assets/Information/VehicleData.json\")\n  }\n\n  submitThirdPartyBookingForm(request: any): Observable<any> {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      })\n    }\n\n    return this.http\n      .post<any>(\n        environment.enviromentURL + environment.ThirdPartyBookingpoint,\n        request,\n        httpOptions\n      )\n      .pipe\n      //  catchError(this.handleError('signup', request))\n      ();\n  }\n}\n","import { JsonPipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { EncrptionService } from 'src/Utilities/encrption.service';\nimport { FormValidators } from 'src/Utilities/FormValidation';\nimport { LandingPageService } from './landing-page.service';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\n\n\nexport class LandingPageComponent implements OnInit {\n\n  alphabetRegex = '^[a-zA-Z]+$';\n  showLoader: boolean;\n  disableButton: boolean = false;\n  showerror: boolean = false;\n  form: FormGroup;\n  disForm = new FormControl();\n  vehicleData = [];\n  bodyData = [];\n  vehicleModelData = [''];\n  premiumAmountValue = 0;\n  constructor(public landingPageService: LandingPageService,\n    public encryptionService: EncrptionService,\n    private toastr: ToastrService,) { }\n  \n\n  ngOnInit(): void {\n    this.landingPageService.getData().subscribe(data => {\n      console.log(JSON.stringify(data.VehicleData));\n      this.vehicleData = data.VehicleData;\n      this.bodyData = data.Body;\n    })\n    this.showLoader = false;\n    this.form = new FormGroup(\n      {\n        firstName: new FormControl('', [\n          Validators.required,\n          Validators.pattern(this.alphabetRegex),\n        ]),\n        lastName: new FormControl('', [\n          Validators.required,\n          Validators.pattern(this.alphabetRegex),\n        ]),\n        mobileNumber: new FormControl('', [Validators.required]),\n        registrationNumber: new FormControl('', [Validators.required]),\n        emailAdd: new FormControl('', [Validators.required, Validators.email]),\n        bodyType: new FormControl('', [Validators.required]),\n        vehicleModel: new FormControl('', [Validators.required]),\n        vehicleMake: new FormControl('', [Validators.required]),\n        premium: new FormControl(),\n        agreeTerm: new FormControl('', [Validators.requiredTrue]),\n        dateOFBirth: new FormControl(),\n        \n      },\n    );\n  }\n\n\n  get firstName() {\n    return this.form.get('firstName');\n  }\n\n  get lastName() {\n    return this.form.get('lastName');\n  }\n\n  get emailAdd() {\n    return this.form.get('emailAdd');\n  }\n\n  get mobileNumber() {\n    return this.form.get('mobileNumber');\n  }\n\n  get agreeTerm() {\n    return this.form.get('agreeTerm');\n  }\n\n  get registrationNumber() {\n    return this.form.get('registrationNumber');\n  }\n\n  get bodyType() {\n    return this.form.get('bodyType');\n  }\n  get vehicleMake() {\n    return this.form.get('vehicleMake');\n  }\n  get vehicleModel() {\n    return this.form.get('vehicleModel');\n  }\n\n  get premium() {\n    return this.form.get('premium');\n  }\n\n  get dateOFBirth() {\n    return this.form.get('dateOFBirth');\n  }\n\n  disableLoaders(){\n    this.showLoader = false\n    this.disableButton = false;\n  }\n\n  showLoaders(){\n    this.showLoader = true\n    this.disableButton = true\n  }\n  \n  bindVehicleModel(e) {\n    this.vehicleModelData = this.vehicleData.filter(item => item.Make === e.target.value)[0].Model\n    console.log(JSON.stringify(this.vehicleModelData))\n  }\n\n  bindBodyModel(e) {\n    this.premiumAmountValue = this.bodyData.filter(item => item.Type === e.target.value)[0].Premium\n    console.log(this.premiumAmountValue);\n  }\n\n  submitForm(){\n    if (this.form.invalid) {\n      FormValidators.validateAllFormFields(this.form);\n      return;\n\n    }\n    this.showLoaders()\n\n    this.landingPageService.submitThirdPartyBookingForm(this.encryptionService.SubmitData(this.form)).subscribe((resp) => {\n      console.log(resp)\n      this.form.reset();\n      this.toastr.success(resp.message)\n      this.disableLoaders()\n    },\n    (error) => {\n      console.log(error.error.message)\n      this.toastr.error(error.error.message);\n      this.disableLoaders()\n    })\n\n  }\n\n}\n","\n<div class=\"container-fluid main-container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 image-app\">\n  \n      </div>\n      <div class=\"col-md-6 container-right right-view\">\n        <nav class=\"nav navbar navbar-expand-lg navbar-light\">\n          <a class=\"navbar-brand mr-auto\" href=\"#\">\n\n          </a>\n          <div class=\"navbar-nav\">\n            <a class=\"navbar-brand mr-auto\" href=\"#\">\n              <img\n                src=\"../../../assets/img/Allianz.png\"\n                alt=\"Logo\"\n                class=\"logo\"\n              />\n            </a>\n          </div>\n          \n        </nav>\n        <div class=\"signup-content\">\n          <form\n            method=\"POST\"\n            id=\"signup-form\"\n            class=\"signup-form\"\n            [formGroup]=\"form\"\n            (ngSubmit)=\"submitForm()\"\n          >\n            <div class=\"form-title\">Purchase Vehicle Third Party Policy</div>\n            <div class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"name\"\n                formControlName=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"First Name\"\n              />\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"firstName.touched && firstName.invalid\"\n              >\n                <span *ngIf=\"!!firstName.errors.required\"\n                  >First name is required</span\n                >\n                <span *ngIf=\"!!firstName.errors.pattern\"\n                  >Only alphabets are allowed</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"name\"\n                formControlName=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Last Name\"\n              />\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"lastName.touched && lastName.invalid\"\n              >\n                <span *ngIf=\"!!lastName.errors.required\"\n                  >Last name is required</span\n                >\n                <span *ngIf=\"!!lastName.errors.pattern\"\n                  >Only alphabets are allowed</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                name=\"email\"\n                formControlName=\"emailAdd\"\n                id=\"email\"\n                placeholder=\"Your Email\"\n              />\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"emailAdd.touched && emailAdd.invalid\"\n              >\n                <span *ngIf=\"!!emailAdd.errors.required\"\n                  >Email address is required</span\n                >\n                <span *ngIf=\"!!emailAdd.errors.email\"\n                  >Email address is invalid</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"mobileNumber\"\n                formControlName=\"mobileNumber\"\n                id=\"mobileNumber\"\n                placeholder=\"Mobile Number\"\n              />\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"mobileNumber.touched && mobileNumber.invalid\"\n              >\n                <span *ngIf=\"!!mobileNumber.errors.required\"\n                  >Mobile Number is required</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                name=\"dateOFBirth\"\n                formControlName=\"dateOFBirth\"\n                id=\"dateOFBirth\"\n                placeholder=\"Date OF Birth\"\n              />\n              <!-- <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"dateOFBirth.touched && dateOFBirth.invalid\"\n              >\n                <span *ngIf=\"!!dateOFBirth.errors.required\"\n                  >Date OF Birth is required</span\n                >\n              </div> -->\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"registrationNumber\"\n                formControlName=\"registrationNumber\"\n                id=\"registrationNumber\"\n                placeholder=\"Vehicle Registration Number\"\n              />\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"registrationNumber.touched && registrationNumber.invalid\"\n              >\n                <span *ngIf=\"!!registrationNumber.errors.required\"\n                  >Vehicle Registration Number is required</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <select formControlName=\"vehicleMake\" class=\"form-control\" (change)=\"bindVehicleModel($event)\" >\n                  <option disabled>Vehicle Make</option>\n                  <option>Choose Vehicle Make</option>\n                  <option *ngFor=\"let data of vehicleData\">{{data.Make}}</option>\n              </select>\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"vehicleMake.touched && vehicleMake.invalid\"\n              >\n                <span *ngIf=\"!!vehicleMake.errors.required\"\n                  >please select a Vehicle make</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <select formControlName=\"vehicleModel\" class=\"form-control\" >\n                  <option disabled>Vehicle Model</option>\n                  <option>Choose Vehicle Model</option>\n                  <option *ngFor=\"let data of vehicleModelData\">{{data}}</option>\n              </select>\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"vehicleModel.touched && vehicleModel.invalid\"\n              >\n                <span *ngIf=\"!!vehicleModel.errors.required\"\n                  >please select a vehicle model</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <select formControlName=\"bodyType\" class=\"form-control\" (change)=\"bindBodyModel($event)\">\n                  <option disabled>Body Type</option>\n                  <option>Choose Body Type</option>\n                  <option *ngFor=\"let data of bodyData\">{{data.Type}}</option>\n              </select>\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"bodyType.touched && bodyType.invalid\"\n              >\n                <span *ngIf=\"!!bodyType.errors.required\"\n                  >Please select a body type</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"decimal\"\n                class=\"form-control\"\n                name=\"premium\"\n                formControlName=\"premium\"\n                id=\"premium\"\n                placeholder=\"Premium Amount\"\n                [(ngModel)]=\"premiumAmountValue\" \n                [readonly] = true\n              />\n              <div\n                class=\"small alert alert-danger\"\n                *ngIf=\"premium.touched && premium.invalid\"\n              >\n                <span *ngIf=\"!!premium.errors.required\"\n                  >Premium Amount must be included</span\n                >\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <div class=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  name=\"agreeTerm\"\n                  class=\"form-check-input\"\n                  formControlName=\"agreeTerm\"\n                />\n                <label for=\"agreeTerm\" class=\"label-agree-term\"\n                  ><span><span></span></span>I agree\n                  <a href=\"#\" class=\"term-service\">Terms of Conditions</a></label\n                >\n                <div\n                  class=\"small alert alert-success back-grey\"\n                  *ngIf=\"agreeTerm.touched || agreeTerm.invalid\"\n                >\n                  <span *ngIf=\"form.hasError('required', 'agreeTerm')\"\n                    >Kindly agree to terms and conditions</span\n                  >\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button\n                type=\"submit\"\n                name=\"submit\"\n                id=\"submit\"\n                [disabled]=\"!disableButton\"\n                class=\"form-submit\"\n                value=\"Sign up\"\n                [disabled]=\"disableButton\"\n              >\n                Submit\n                <i\n                  class=\"fa fa-spinner fa-spin fs-22 float-r\"\n                  *ngIf=\"showLoader\"\n                ></i>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  ","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncrptionService {\n\n  constructor() { }\n\n\n  SubmitData(form){\n    return {\n      firstname: form.value.firstName,\n      lastName: form.value.lastName,\n      email: form.value.emailAdd,\n      mobileNumber: form.value.mobileNumber.toString(),\n      vehicleRegNo: form.value.registrationNumber,\n      dateOFBirth: form.value.dateOFBirth,\n      vehicleMake: form.value.vehicleMake,\n      vehicleModel: form.value.vehicleModel,\n      bodyType: form.value.bodyType,\n      premiumAmount: form.value.premium,\n      // premiumAmount: 20000,\n    };\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}